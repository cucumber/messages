# frozen_string_literal: true

# The code was auto-generated by {this script}[https://github.com/cucumber/messages/blob/main/jsonschema/scripts/codegen.rb]
module Cucumber
  module Messages
    ##
    # Represents the GlobalHookFinished message in Cucumber's {message protocol}[https://github.com/cucumber/messages].
    ##
    ##
    class GlobalHookFinished < Message
      ##
      # Identifier for the test run that this hook execution belongs to
      ##
      attr_reader :test_run_started_id

      ##
      # Identifier for the hook that was executed
      ##
      attr_reader :hook_id

      attr_reader :result

      attr_reader :timestamp

      def initialize(
        test_run_started_id: '',
        hook_id: '',
        result: TestStepResult.new,
        timestamp: Timestamp.new
      )
        @test_run_started_id = test_run_started_id
        @hook_id = hook_id
        @result = result
        @timestamp = timestamp
        super()
      end

      ##
      # Returns a new GlobalHookFinished from the given hash.
      # If the hash keys are camelCased, they are properly assigned to the
      # corresponding snake_cased attributes.
      #
      #   Cucumber::Messages::GlobalHookFinished.from_h(some_hash) # => #<Cucumber::Messages::GlobalHookFinished:0x... ...>
      ##
      def self.from_h(hash)
        return nil if hash.nil?

        new(
          test_run_started_id: hash[:testRunStartedId],
          hook_id: hash[:hookId],
          result: TestStepResult.from_h(hash[:result]),
          timestamp: Timestamp.from_h(hash[:timestamp])
        )
      end
    end
  end
end

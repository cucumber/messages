require 'cucumber/messages/message'

"New name - undefined_parameter_type.rb"
# The code was auto-generated by {this script}[https://github.com/cucumber/messages/blob/main/jsonschema/scripts/codegen.rb]
module Cucumber
  module Messages
    ##
    # Represents the UndefinedParameterType message in Cucumber's {message protocol}[https://github.com/cucumber/messages].
    ##
    class UndefinedParameterType < ::Cucumber::Messages::Message
      attr_reader :expression

      attr_reader :name

      def initialize(
        expression: '',
        name: ''
      )
        @expression = expression
        @name = name
        super()
      end
    end
  end
end

module Cucumber
  module Messages
    class AttachmentContentEncoding
      IDENTITY = 'IDENTITY'
      BASE64 = 'BASE64'
    end
  end
end

module Cucumber
  module Messages
    class PickleStepType
      UNKNOWN = 'Unknown'
      CONTEXT = 'Context'
      ACTION = 'Action'
      OUTCOME = 'Outcome'
    end
  end
end

module Cucumber
  module Messages
    class SourceMediaType
      TEXT_X_CUCUMBER_GHERKIN_PLAIN = 'text/x.cucumber.gherkin+plain'
      TEXT_X_CUCUMBER_GHERKIN_MARKDOWN = 'text/x.cucumber.gherkin+markdown'
    end
  end
end

module Cucumber
  module Messages
    class StepDefinitionPatternType
      CUCUMBER_EXPRESSION = 'CUCUMBER_EXPRESSION'
      REGULAR_EXPRESSION = 'REGULAR_EXPRESSION'
    end
  end
end

module Cucumber
  module Messages
    class StepKeywordType
      UNKNOWN = 'Unknown'
      CONTEXT = 'Context'
      ACTION = 'Action'
      OUTCOME = 'Outcome'
      CONJUNCTION = 'Conjunction'
    end
  end
end

module Cucumber
  module Messages
    class TestStepResultStatus
      UNKNOWN = 'UNKNOWN'
      PASSED = 'PASSED'
      SKIPPED = 'SKIPPED'
      PENDING = 'PENDING'
      UNDEFINED = 'UNDEFINED'
      AMBIGUOUS = 'AMBIGUOUS'
      FAILED = 'FAILED'
    end
  end
end

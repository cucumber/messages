[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "wheel"]

[project]
authors = [
  {name = "Cucumber Limited", email = "cukes@googlegroups.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS :: MacOS X",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
dependencies = []
description = "Cucumber Messages is a message protocol for representing results and other information from Cucumber. "
license = {text = "MIT"}
maintainers = [
  {name = "Konstantin Goloveshko", email = "kostya.goloveshko@gmail.com"}
]
name = "cucumber-messages"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
urls = {Repository = "https://github.com/cucumber/messages"}
version = "0.1.0"

[project.optional-dependencies]
test = [
  # local
  "cucumber-messages[test-coverage]",
  # external; Must be in sync with [tool.tox]
  "mypy",
  "pre-commit",
  "tox>=4.2"
]
test-coverage = [
  "coverage",
  "GitPython",
  "packaging",
  "pytest"
]

[tool.black]
# Don't include autogenerated file
force-exclude = ".*\\/src\\/cucumber_messages\\/_messages\\.py"
line-length = 120
target-version = ["py39", "py310", "py311", "py312", "py313"]
verbose = true

[tool.isort]
line_length = 120
multi_line_output = 3
profile = "black"

[tool.mypy]
files = "src/**/*.py"
install_types = true
non_interactive = true
plugins = []
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
]

# Once https://github.com/tox-dev/tox/issues/999 is released and available, migrate to the new tox approach
[tool.tox]
# language=INI
legacy_tox_ini = """
[tox]
requires =
    tox>=4.2
env_list =
    py313-pre-commit-lin
    py{313, 312, 311, 310, 39}-mypy-lin
    py{py310, py39, 313, 312, 311, 310, 39}-pytest-coverage-lin
    py313-pytest-coverage-{win, mac}
distshare = {homedir}/.tox/distshare

[testenv]
platform =
    lin: linux
    mac: darwin
    win: win32

[testenv:py313-pre-commit-lin]
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run

[testenv:py{313, 312, 311, 310, 39}-mypy-lin]
deps =
    mypy
allowlist_externals =
    mkdir
    chmod
commands =
    mkdir .mypy_cache
    chmod 755 .mypy_cache
    python -m mypy --cache-dir .mypy_cache

[testenv:py{py310, py39, 313, 312, 311, 310, 39}-pytest-coverage-{lin, win, mac}]
deps =
    .[test-coverage]
commands =
    coverage run --append -m pytest -vvl

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
    pypy-3.9: pypy39
    pypy-3.10: pypy310
"""

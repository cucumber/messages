{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "TestCase.json",
  "additionalProperties": false,
  "definitions": {
    "Group": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "required": [
        "children"
      ],
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/Group",
            "$schema": "https://json-schema.org/draft/2020-12/schema"
          },
          "type": "array"
        },
        "start": {
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StepMatchArgument": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Represents a single argument extracted from a step match and passed to a step definition.\nThis is used for the following purposes:\n- Construct an argument to pass to a step definition (possibly through a parameter type transform)\n- Highlight the matched parameter in rich formatters such as the HTML formatter\n\nThis message closely matches the `Argument` class in the `cucumber-expressions` library.",
      "required": [
        "group"
      ],
      "properties": {
        "group": {
          "$ref": "#/definitions/Group",
          "description": "Represents the outermost capture group of an argument. This message closely matches the\n`Group` class in the `cucumber-expressions` library."
        },
        "parameterTypeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StepMatchArgumentsList": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "required": [
        "stepMatchArguments"
      ],
      "properties": {
        "stepMatchArguments": {
          "items": {
            "$ref": "#/definitions/StepMatchArgument"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TestStep": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "A `TestStep` is derived from either a `PickleStep` combined with a `StepDefinition`, or from a `Hook`.\n\nWhen derived from a PickleStep:\n * For `UNDEFINED` steps `stepDefinitionIds` and `stepMatchArgumentsLists` will be empty.\n * For `AMBIGUOUS` steps, there will be multiple entries in `stepDefinitionIds` and `stepMatchArgumentsLists`. The first entry in the stepMatchArgumentsLists holds the list of arguments for the first matching step definition, the second entry for the second, etc",
      "required": [
        "id"
      ],
      "properties": {
        "hookId": {
          "description": "Pointer to the `Hook` (if derived from a Hook)",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "pickleStepId": {
          "description": "Pointer to the `PickleStep` (if derived from a `PickleStep`)",
          "type": "string"
        },
        "stepDefinitionIds": {
          "description": "Pointer to all the matching `StepDefinition`s (if derived from a `PickleStep`).\n\nEach element represents a matching step definition.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "stepMatchArgumentsLists": {
          "description": "A list of list of StepMatchArgument (if derived from a `PickleStep`).\n\nEach element represents the arguments for a matching step definition.",
          "items": {
            "$ref": "#/definitions/StepMatchArgumentsList"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "description": "A `TestCase` contains a sequence of `TestStep`s.",
  "required": [
    "id",
    "pickleId",
    "testSteps"
  ],
  "properties": {
    "id": {
      "type": "string"
    },
    "pickleId": {
      "description": "The ID of the `Pickle` this `TestCase` is derived from.",
      "type": "string"
    },
    "testSteps": {
      "items": {
        "$ref": "#/definitions/TestStep"
      },
      "type": "array"
    },
    "testRunStartedId": {
      "description": "Identifier for the test run that this test case belongs to",
      "type": "string"
    }
  },
  "type": "object"
}
